

.. _sphx_glr_packages_scikit-learn_auto_examples_linear_regression.py:


A simple linear regression
===========================




.. code-block:: python


    import numpy as np
    import matplotlib.pyplot as plt
    from sklearn.linear_model import LinearRegression


    def plot_linear_regression():
        a = 0.5
        b = 1.0

        # x from 0 to 10
        x = 30 * np.random.random(20)

        # y = a*x + b with noise
        y = a * x + b + np.random.normal(size=x.shape)

        # create a linear regression classifier
        clf = LinearRegression()
        clf.fit(x[:, None], y)

        # predict y from the data
        x_new = np.linspace(0, 30, 100)
        y_new = clf.predict(x_new[:, None])

        # plot the results
        ax = plt.axes()
        ax.scatter(x, y)
        ax.plot(x_new, y_new)

        ax.set_xlabel('x')
        ax.set_ylabel('y')

        ax.axis('tight')


    if __name__ == '__main__':
        plot_linear_regression()
        plt.show()

**Total running time of the script:** ( 0 minutes  0.000 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: linear_regression.py <linear_regression.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: linear_regression.ipynb <linear_regression.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
