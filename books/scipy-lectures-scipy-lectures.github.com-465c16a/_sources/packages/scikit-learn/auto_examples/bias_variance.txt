

.. _sphx_glr_packages_scikit-learn_auto_examples_bias_variance.py:


A simple example of bias-variance tradeoff
==========================================




.. code-block:: python


    import numpy as np
    import matplotlib.pyplot as plt


    def test_func(x, err=0.5):
        return np.random.normal(10 - 1. / (x + 0.1), err)


    def compute_error(x, y, p):
        yfit = np.polyval(p, x)
        return np.sqrt(np.mean((y - yfit) ** 2))


    def plot_bias_variance(N=8, random_seed=42, err=0.5):
        np.random.seed(random_seed)
        x = 10 ** np.linspace(-2, 0, N)
        y = test_func(x)

        xfit = np.linspace(-0.2, 1.2, 1000)

        titles = ['d = 1 (under-fit; high bias)',
                  'd = 2',
                  'd = 6 (over-fit; high variance)']
        degrees = [1, 2, 6]

        fig = plt.figure(figsize = (9, 3.5))
        fig.subplots_adjust(left = 0.06, right=0.98,
                            bottom=0.15, top=0.85,
                            wspace=0.05)
        for i, d in enumerate(degrees):
            ax = fig.add_subplot(131 + i, xticks=[], yticks=[])
            ax.scatter(x, y, marker='x', c='k', s=50)

            p = np.polyfit(x, y, d)
            yfit = np.polyval(p, xfit)
            ax.plot(xfit, yfit, '-b')

            ax.set_xlim(-0.2, 1.2)
            ax.set_ylim(0, 12)
            ax.set_xlabel('house size')
            if i == 0:
                ax.set_ylabel('price')

            ax.set_title(titles[i])

    if __name__ == '__main__':
        plot_bias_variance()
        plt.show()

**Total running time of the script:** ( 0 minutes  0.000 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: bias_variance.py <bias_variance.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: bias_variance.ipynb <bias_variance.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
